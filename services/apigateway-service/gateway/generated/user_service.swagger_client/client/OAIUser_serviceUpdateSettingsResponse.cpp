/**
 * user_service.proto
 * No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUser_serviceUpdateSettingsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUser_serviceUpdateSettingsResponse::OAIUser_serviceUpdateSettingsResponse(QString json)
{
	this->initializeModel();
	this->fromJson(json);
}

OAIUser_serviceUpdateSettingsResponse::OAIUser_serviceUpdateSettingsResponse()
{
	this->initializeModel();
}

OAIUser_serviceUpdateSettingsResponse::~OAIUser_serviceUpdateSettingsResponse()
{
}

void OAIUser_serviceUpdateSettingsResponse::initializeModel()
{
	m_settings_isSet = false;
	m_settings_isValid = false;
}

void OAIUser_serviceUpdateSettingsResponse::fromJson(QString jsonString)
{
	QByteArray array(jsonString.toStdString().c_str());
	QJsonDocument doc = QJsonDocument::fromJson(array);
	QJsonObject jsonObject = doc.object();
	this->fromJsonObject(jsonObject);
}

void OAIUser_serviceUpdateSettingsResponse::fromJsonObject(QJsonObject json)
{
	m_settings_isValid = ::OpenAPI::fromJsonValue(m_settings, json[QString("settings")]);
	m_settings_isSet = !json[QString("settings")].isNull() && m_settings_isValid;
}

QString OAIUser_serviceUpdateSettingsResponse::asJson() const
{
	QJsonObject obj = this->asJsonObject();
	QJsonDocument doc(obj);
	QByteArray bytes = doc.toJson();
	return QString(bytes);
}

QJsonObject OAIUser_serviceUpdateSettingsResponse::asJsonObject() const
{
	QJsonObject obj;
	if (m_settings.isSet()) {
		obj.insert(QString("settings"), ::OpenAPI::toJsonValue(m_settings));
	}
	return obj;
}

OAIUser_serviceSettings OAIUser_serviceUpdateSettingsResponse::getSettings() const
{
	return m_settings;
}

void OAIUser_serviceUpdateSettingsResponse::setSettings(const OAIUser_serviceSettings &settings)
{
	m_settings = settings;
	m_settings_isSet = true;
}

bool OAIUser_serviceUpdateSettingsResponse::is_settings_Set() const
{
	return m_settings_isSet;
}

bool OAIUser_serviceUpdateSettingsResponse::is_settings_Valid() const
{
	return m_settings_isValid;
}

bool OAIUser_serviceUpdateSettingsResponse::isSet() const
{
	bool isObjectUpdated = false;
	do {
		if (m_settings.isSet()) {
			isObjectUpdated = true;
			break;
		}
	} while (false);
	return isObjectUpdated;
}

bool OAIUser_serviceUpdateSettingsResponse::isValid() const
{
	// only required properties are required for the object to be considered valid
	return true;
}

} // namespace OpenAPI
