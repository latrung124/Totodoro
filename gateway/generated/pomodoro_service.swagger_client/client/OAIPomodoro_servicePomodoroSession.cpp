/**
 * pomodoro_service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPomodoro_servicePomodoroSession.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPomodoro_servicePomodoroSession::OAIPomodoro_servicePomodoroSession(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPomodoro_servicePomodoroSession::OAIPomodoro_servicePomodoroSession() {
    this->initializeModel();
}

OAIPomodoro_servicePomodoroSession::~OAIPomodoro_servicePomodoroSession() {}

void OAIPomodoro_servicePomodoroSession::initializeModel() {

    m_session_id_isSet = false;
    m_session_id_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;

    m_task_id_isSet = false;
    m_task_id_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_progress_isSet = false;
    m_progress_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_session_type_isSet = false;
    m_session_type_isValid = false;

    m_number_in_cycle_isSet = false;
    m_number_in_cycle_isValid = false;

    m_last_update_isSet = false;
    m_last_update_isValid = false;
}

void OAIPomodoro_servicePomodoroSession::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPomodoro_servicePomodoroSession::fromJsonObject(QJsonObject json) {

    m_session_id_isValid = ::OpenAPI::fromJsonValue(m_session_id, json[QString("sessionId")]);
    m_session_id_isSet = !json[QString("sessionId")].isNull() && m_session_id_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("userId")]);
    m_user_id_isSet = !json[QString("userId")].isNull() && m_user_id_isValid;

    m_task_id_isValid = ::OpenAPI::fromJsonValue(m_task_id, json[QString("taskId")]);
    m_task_id_isSet = !json[QString("taskId")].isNull() && m_task_id_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_progress_isValid = ::OpenAPI::fromJsonValue(m_progress, json[QString("progress")]);
    m_progress_isSet = !json[QString("progress")].isNull() && m_progress_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_session_type_isValid = ::OpenAPI::fromJsonValue(m_session_type, json[QString("sessionType")]);
    m_session_type_isSet = !json[QString("sessionType")].isNull() && m_session_type_isValid;

    m_number_in_cycle_isValid = ::OpenAPI::fromJsonValue(m_number_in_cycle, json[QString("numberInCycle")]);
    m_number_in_cycle_isSet = !json[QString("numberInCycle")].isNull() && m_number_in_cycle_isValid;

    m_last_update_isValid = ::OpenAPI::fromJsonValue(m_last_update, json[QString("lastUpdate")]);
    m_last_update_isSet = !json[QString("lastUpdate")].isNull() && m_last_update_isValid;
}

QString OAIPomodoro_servicePomodoroSession::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPomodoro_servicePomodoroSession::asJsonObject() const {
    QJsonObject obj;
    if (m_session_id_isSet) {
        obj.insert(QString("sessionId"), ::OpenAPI::toJsonValue(m_session_id));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    if (m_task_id_isSet) {
        obj.insert(QString("taskId"), ::OpenAPI::toJsonValue(m_task_id));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_progress_isSet) {
        obj.insert(QString("progress"), ::OpenAPI::toJsonValue(m_progress));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_session_type.isSet()) {
        obj.insert(QString("sessionType"), ::OpenAPI::toJsonValue(m_session_type));
    }
    if (m_number_in_cycle_isSet) {
        obj.insert(QString("numberInCycle"), ::OpenAPI::toJsonValue(m_number_in_cycle));
    }
    if (m_last_update_isSet) {
        obj.insert(QString("lastUpdate"), ::OpenAPI::toJsonValue(m_last_update));
    }
    return obj;
}

QString OAIPomodoro_servicePomodoroSession::getSessionId() const {
    return m_session_id;
}
void OAIPomodoro_servicePomodoroSession::setSessionId(const QString &session_id) {
    m_session_id = session_id;
    m_session_id_isSet = true;
}

bool OAIPomodoro_servicePomodoroSession::is_session_id_Set() const{
    return m_session_id_isSet;
}

bool OAIPomodoro_servicePomodoroSession::is_session_id_Valid() const{
    return m_session_id_isValid;
}

QString OAIPomodoro_servicePomodoroSession::getUserId() const {
    return m_user_id;
}
void OAIPomodoro_servicePomodoroSession::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIPomodoro_servicePomodoroSession::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIPomodoro_servicePomodoroSession::is_user_id_Valid() const{
    return m_user_id_isValid;
}

QString OAIPomodoro_servicePomodoroSession::getTaskId() const {
    return m_task_id;
}
void OAIPomodoro_servicePomodoroSession::setTaskId(const QString &task_id) {
    m_task_id = task_id;
    m_task_id_isSet = true;
}

bool OAIPomodoro_servicePomodoroSession::is_task_id_Set() const{
    return m_task_id_isSet;
}

bool OAIPomodoro_servicePomodoroSession::is_task_id_Valid() const{
    return m_task_id_isValid;
}

QDateTime OAIPomodoro_servicePomodoroSession::getStartTime() const {
    return m_start_time;
}
void OAIPomodoro_servicePomodoroSession::setStartTime(const QDateTime &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIPomodoro_servicePomodoroSession::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIPomodoro_servicePomodoroSession::is_start_time_Valid() const{
    return m_start_time_isValid;
}

qint32 OAIPomodoro_servicePomodoroSession::getProgress() const {
    return m_progress;
}
void OAIPomodoro_servicePomodoroSession::setProgress(const qint32 &progress) {
    m_progress = progress;
    m_progress_isSet = true;
}

bool OAIPomodoro_servicePomodoroSession::is_progress_Set() const{
    return m_progress_isSet;
}

bool OAIPomodoro_servicePomodoroSession::is_progress_Valid() const{
    return m_progress_isValid;
}

QDateTime OAIPomodoro_servicePomodoroSession::getEndTime() const {
    return m_end_time;
}
void OAIPomodoro_servicePomodoroSession::setEndTime(const QDateTime &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIPomodoro_servicePomodoroSession::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIPomodoro_servicePomodoroSession::is_end_time_Valid() const{
    return m_end_time_isValid;
}

OAIPomodoro_serviceSessionStatus OAIPomodoro_servicePomodoroSession::getStatus() const {
    return m_status;
}
void OAIPomodoro_servicePomodoroSession::setStatus(const OAIPomodoro_serviceSessionStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIPomodoro_servicePomodoroSession::is_status_Set() const{
    return m_status_isSet;
}

bool OAIPomodoro_servicePomodoroSession::is_status_Valid() const{
    return m_status_isValid;
}

OAIPomodoro_serviceSessionType OAIPomodoro_servicePomodoroSession::getSessionType() const {
    return m_session_type;
}
void OAIPomodoro_servicePomodoroSession::setSessionType(const OAIPomodoro_serviceSessionType &session_type) {
    m_session_type = session_type;
    m_session_type_isSet = true;
}

bool OAIPomodoro_servicePomodoroSession::is_session_type_Set() const{
    return m_session_type_isSet;
}

bool OAIPomodoro_servicePomodoroSession::is_session_type_Valid() const{
    return m_session_type_isValid;
}

qint32 OAIPomodoro_servicePomodoroSession::getNumberInCycle() const {
    return m_number_in_cycle;
}
void OAIPomodoro_servicePomodoroSession::setNumberInCycle(const qint32 &number_in_cycle) {
    m_number_in_cycle = number_in_cycle;
    m_number_in_cycle_isSet = true;
}

bool OAIPomodoro_servicePomodoroSession::is_number_in_cycle_Set() const{
    return m_number_in_cycle_isSet;
}

bool OAIPomodoro_servicePomodoroSession::is_number_in_cycle_Valid() const{
    return m_number_in_cycle_isValid;
}

QDateTime OAIPomodoro_servicePomodoroSession::getLastUpdate() const {
    return m_last_update;
}
void OAIPomodoro_servicePomodoroSession::setLastUpdate(const QDateTime &last_update) {
    m_last_update = last_update;
    m_last_update_isSet = true;
}

bool OAIPomodoro_servicePomodoroSession::is_last_update_Set() const{
    return m_last_update_isSet;
}

bool OAIPomodoro_servicePomodoroSession::is_last_update_Valid() const{
    return m_last_update_isValid;
}

bool OAIPomodoro_servicePomodoroSession::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_session_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_task_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_progress_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_session_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_in_cycle_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPomodoro_servicePomodoroSession::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
